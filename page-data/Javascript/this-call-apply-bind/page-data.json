{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/this-call-apply-bind/","result":{"data":{"site":{"siteMetadata":{"title":"SaemLog","author":"Saem","siteUrl":"https://amiru11.github.io","comment":{"disqusShortName":"","utterances":""},"sponsor":{"buyMeACoffeeId":"saemii"}}},"markdownRemark":{"id":"9f1e8ae5-6267-55ff-9018-b3d9a8408411","excerpt":"들어가며 javascript에서 this로 사용할 객체를 인수로 받아서 처리하는 method들은 Function.proptotype.call(), Function.proptotype.apply(), Function.proptotype.bind()가 존재하며 특히 react에서 Class Component 사용 시, bind를 많이 사용하게된다. 이 세가지 메서드들은 뭐가 다를까?","html":"<h2 id=\"들어가며\" style=\"position:relative;\"><a href=\"#%EB%93%A4%EC%96%B4%EA%B0%80%EB%A9%B0\" aria-label=\"들어가며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>들어가며</h2>\n<blockquote>\n<p>javascript에서 this로 사용할 객체를 인수로 받아서 처리하는 method들은 Function.proptotype.call(), Function.proptotype.apply(), Function.proptotype.bind()가 존재하며 특히 react에서 Class Component 사용 시, bind를 많이 사용하게된다. 이 세가지 메서드들은 뭐가 다를까?</p>\n</blockquote>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">iAmThisBinding</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> thisArg <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> count<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// this로 사용할 객체</span>\n\n<span class=\"token comment\">/**</span>\n<span class=\"token comment\"> * 1. Function.proptotype.call()</span>\n<span class=\"token comment\"> * 본질적인 기능은 함수를 호출하는 것이며, 첫번째 argument로 전달한 특정 객체를 호출한 함수의 this에 바인딩한다.</span>\n<span class=\"token comment\"> * 선언 즉시 호출</span>\n<span class=\"token comment\"> **/</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">iAmThisBinding</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>thisArg<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Arguments(3) [1, 2, 3, callee: ƒ, Symbol(Symbol.iterator): ƒ]</span>\n<span class=\"token comment\">// { count: 1 }</span>\n\n<span class=\"token comment\">/**</span>\n<span class=\"token comment\"> * 2. Function.proptotype.apply()</span>\n<span class=\"token comment\"> * call과 동일한 동작을 하지만 두번째 인자를 배열로 받아 처리한다.</span>\n<span class=\"token comment\"> **/</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">iAmThisBinding</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>thisArg<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Arguments(3) [1, 2, 3, callee: ƒ, Symbol(Symbol.iterator): ƒ]</span>\n<span class=\"token comment\">// { count: 1 }</span>\n\n<span class=\"token comment\">/**</span>\n<span class=\"token comment\"> * 3. Function.proptotype.bind()</span>\n<span class=\"token comment\"> * ES5에서 추가된 메서드</span>\n<span class=\"token comment\"> * 선언한 즉시 함수를 호출하지 않고 새로운 함수를 반환</span>\n<span class=\"token comment\"> * 함수에 this를 미리 적용하는 것과 부분 적용 함수를 구현하는 두 가지 목적</span>\n<span class=\"token comment\"> * 메서드의 this와 내부의 중첩 함수 또는 콜백 함수의 this가 불일치하는 이슈 해결을 위해 사용</span>\n<span class=\"token comment\"> **/</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">iAmThisBinding</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>thisArg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// iAmThisBinding</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">iAmThisBinding</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>thisArg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { count: 1 }</span></code></pre></div>","frontmatter":{"title":"call(), apply(), bind()","date":"January 13, 2020"}}},"pageContext":{"slug":"/javascript/this-call-apply-bind/","previous":{"fields":{"slug":"/javascript/remove-duplicate-in-array/"},"frontmatter":{"title":"배열에서 중복 값 제거하기","category":"javascript","draft":false}},"next":{"fields":{"slug":"/gatsby/path_prefix/"},"frontmatter":{"title":"Gatsby에서 __PATH_PREFIX__ 못찾을 때","category":"gatsby","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}